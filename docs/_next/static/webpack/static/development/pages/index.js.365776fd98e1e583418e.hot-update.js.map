{"version":3,"file":"static/webpack/static/development/pages/index.js.365776fd98e1e583418e.hot-update.js","sources":["webpack:///./slide-deck/Deck/utils.js"],"sourcesContent":["export const updateURL = (prevState, state, router) => {\n  if (prevState.slideIndex !== state.slideIndex) {\n    router.replace(`${router.pathname}?slide=${state.slideIndex}`);\n  }\n};\n\nexport const checkForStateChange = (currState, nextState) => {\n  const index = currState.slideIndex !== nextState.slideIndex;\n  const scale = currState.scale !== nextState.scale;\n  const animation = currState.animation !== nextState.animation;\n  return scale || index || animation;\n};\n\nexport const checkForNewAnimation = (prevState, currState, callback) => {\n  if (!prevState.animaiton && currState.animation) {\n    window.setTimeout(callback, 1000);\n  }\n};\n\nexport const addKeysToSlides = slides => slides.map((slide, i) => ({ ...slide, key: i }));\n\nexport const getScale = ({ currentTarget: { innerWidth, innerHeight } }, template) => {\n  const { width, height } = template.globals;\n  const scaleX = innerWidth / width;\n  const scaleY = innerHeight / height;\n  return Math.min(scaleX, scaleY);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}