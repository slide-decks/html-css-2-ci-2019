{"version":3,"file":"static/webpack/static/development/pages/index.js.b869a2ea73460a7429a2.hot-update.js","sources":["webpack:///./templates/main/slides/ImageDescription.jsx","webpack:///./templates/main/slides/ImageDescription2.jsx","webpack:///./templates/main/slides/Services/Services.jsx","webpack:///./templates/main/slides/Services2/Services2.jsx","webpack:///./templates/main/slides/Title.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { string, arrayOf } from 'prop-types';\nimport { renderContent } from '../utils';\nimport { LineHeader } from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  ${props => props.styles}\n`;\n\nconst Left = styled.div`\n  width: 50%;\n  background: url('${props => props.src}') no-repeat center/cover;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 50%;\n  padding: 0 80px 0 64px;\n`;\n\nconst Middle = styled.div`\n  width: 100%;\n`;\n\nconst Content = styled.div`\n  text-align: left;\n`;\n\nconst ImageDescription = ({ image, title, content, styles }) => (\n  <Container styles={styles} className=\"image-description\">\n    <Left src={image} className=\"left-column\" />\n    <Right className=\"right-column\">\n      <Middle className=\"middle\">\n        <LineHeader>{title}</LineHeader>\n        <Content className=\"content\">{renderContent(content)}</Content>\n      </Middle>\n    </Right>\n  </Container>\n);\n\nImageDescription.propTypes = {\n  image: string.isRequired,\n  title: string.isRequired,\n  content: string.isRequired,\n  styles: arrayOf(string),\n};\n\nexport default ImageDescription;\n","import styled from 'styled-components';\nimport { string, arrayOf } from 'prop-types';\nimport { renderContent } from '../utils';\nimport { BoxHeader } from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 80px;\n  ${props => props.styles}\n`;\n\nconst Middle = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Image = styled.div`\n  width: 864px;\n  height: 648px;\n  min-width: 864px;\n  min-height: 648px;\n  background: url('${props => props.src}') no-repeat center/cover;\n  border-radius: 8px;\n`;\n\nconst Content = styled.div`\n  text-align: left;\n  margin-left: 64px;\n  padding-top: 24px;\n`;\n\nconst ImageDescription2 = ({ title, image, content, styles }) => (\n  <Container styles={styles} className=\"image-description2\">\n    <BoxHeader>{title}</BoxHeader>\n    <Middle className=\"middle\">\n      <Image src={image} className=\"image\" />\n      <Content className=\"content\">{renderContent(content)}</Content>\n    </Middle>\n  </Container>\n);\n\nImageDescription2.propTypes = {\n  image: string.isRequired,\n  title: string.isRequired,\n  content: string.isRequired,\n  styles: arrayOf(string),\n};\n\nexport default ImageDescription2;\n","import styled from 'styled-components';\nimport { string, arrayOf, exact } from 'prop-types';\nimport { BoxHeading } from '../../components';\nimport Item from './Item';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 80px;\n  ${props => props.styles}\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: min-content;\n  grid-gap: 80px 72px;\n`;\n\nconst Services = ({ title, content, items, styles }) => (\n  <Container styles={styles} className=\"services\">\n    <BoxHeading align=\"center\" title={title} content={content}>\n      <Items className=\"items\">\n        {items.map(item => (\n          <Item key={item.icon} {...item} />\n        ))}\n      </Items>\n    </BoxHeading>\n  </Container>\n);\n\nServices.propTypes = {\n  title: string.isRequired,\n  content: string.isRequired,\n  items: arrayOf(\n    exact({\n      icon: string,\n      title: string,\n      content: string,\n    }),\n  ),\n  styles: arrayOf(string),\n};\n\nexport default Services;\n","import styled from 'styled-components';\nimport { string, arrayOf, exact } from 'prop-types';\nimport { BoxHeading } from '../../components';\nimport Item from './Item';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 80px;\n  ${props => props.styles}\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: min-content;\n  grid-gap: 80px 72px;\n`;\n\nconst Services2 = ({ title, content, items, styles }) => (\n  <Container styles={styles} className=\"services2\">\n    <BoxHeading align=\"center\" title={title} content={content}>\n      <Items className=\"items\">\n        {items.map(item => (\n          <Item key={item.icon} {...item} />\n        ))}\n      </Items>\n    </BoxHeading>\n  </Container>\n);\n\nServices2.propTypes = {\n  title: string.isRequired,\n  content: string.isRequired,\n  items: arrayOf(\n    exact({\n      icon: string,\n      title: string,\n      content: string,\n    }),\n  ),\n  styles: arrayOf(string),\n};\n\nexport default Services2;\n","import styled from 'styled-components';\nimport { string, arrayOf } from 'prop-types';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  ${props => props.styles}\n`;\n\nconst Middle = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 80%;\n  margin-top: -80px;\n`;\n\nconst Image = styled.img`\n  max-width: 600px;\n  max-height: 480px;\n  margin-bottom: 32px;\n`;\n\nconst Header = styled.h1`\n  text-align: center;\n`;\n\nconst SubHeader = styled.h3`\n  margin-top: 24px;\n  text-align: center;\n`;\n\nconst Title = ({ image, title, subtitle, styles }) => (\n  <Container styles={styles} className=\"title\">\n    <Middle className=\"middle\">\n      {image && <Image src={image} className=\"image\" />}\n      <Header className=\"title\">{title}</Header>\n      <SubHeader className=\"subtitle\">{subtitle}</SubHeader>\n    </Middle>\n  </Container>\n);\n\nTitle.propTypes = {\n  image: string,\n  title: string.isRequired,\n  subtitle: string,\n  styles: arrayOf(string),\n};\n\nexport default Title;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AACA;AAWA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAVA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AACA;AAWA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAVA;AAaA;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAGA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;A","sourceRoot":""}