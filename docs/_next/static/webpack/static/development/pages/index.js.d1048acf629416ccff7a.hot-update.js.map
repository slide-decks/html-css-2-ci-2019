{"version":3,"file":"static/webpack/static/development/pages/index.js.d1048acf629416ccff7a.hot-update.js","sources":["webpack:///./templates/main/components/CircularPercent.jsx","webpack:///./templates/main/slides/Percentages/Percentages.jsx"],"sourcesContent":["class CircularProgressBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    // Size of the enclosing square\n    const sqSize = this.props.sqSize;\n    // SVG centers the stroke width on the radius, subtract out so circle fits in square\n    const radius = (this.props.sqSize - this.props.strokeWidth) / 2;\n    // Enclose cicle in a circumscribing square\n    const viewBox = `0 0 ${sqSize} ${sqSize}`;\n    // Arc length at 100% coverage is the circle circumference\n    const dashArray = radius * Math.PI * 2;\n    // Scale 100% coverage overlay with the actual percent\n    const dashOffset = dashArray - (dashArray * this.props.percentage) / 100;\n\n    return (\n      <svg width={this.props.sqSize} height={this.props.sqSize} viewBox={viewBox}>\n        <circle\n          className=\"circle-background\"\n          cx={this.props.sqSize / 2}\n          cy={this.props.sqSize / 2}\n          r={radius}\n          strokeWidth={`${this.props.strokeWidth}px`}\n        />\n        <circle\n          className=\"circle-progress\"\n          cx={this.props.sqSize / 2}\n          cy={this.props.sqSize / 2}\n          r={radius}\n          strokeWidth={`${this.props.strokeWidth}px`}\n          // Start progress marker at 12 O'Clock\n          transform={`rotate(-90 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`}\n          style={{\n            strokeDasharray: dashArray,\n            strokeDashoffset: dashOffset,\n          }}\n        />\n        <text className=\"circle-text\" x=\"50%\" y=\"50%\" dy=\".3em\" textAnchor=\"middle\">\n          {`${this.props.percentage}%`}\n        </text>\n      </svg>\n    );\n  }\n}\n\nCircularProgressBar.defaultProps = {\n  sqSize: 200,\n  percentage: 25,\n  strokeWidth: 10,\n};\n\nexport default CircularProgressBar;\n","import styled from 'styled-components';\nimport { string, arrayOf, exact, number } from 'prop-types';\nimport { BoxHeading, CircularPercent } from '../../components';\n// import Item from './Item';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 80px;\n  ${props => props.styles}\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: min-content;\n  grid-gap: 80px;\n`;\n\nconst Projects = ({ title, content, items, styles }) => (\n  <Container styles={styles} className=\"projects\">\n    <BoxHeading align=\"center\" title={title} content={content}>\n      <CircularPercent strokeWidth=\"10\" sqSize=\"200\" percentage={25} />\n      {/* <Items className=\"items\">\n        {items.map(item => (\n          <Item key={item.image} {...item} />\n        ))}\n      </Items> */}\n    </BoxHeading>\n  </Container>\n);\n\nProjects.propTypes = {\n  title: string,\n  content: string,\n  items: arrayOf(\n    exact({\n      value: number,\n      title: string,\n      content: string,\n    }),\n  ),\n  styles: arrayOf(string),\n};\n\nexport default Projects;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAFA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA7CA;AACA;AA+CA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAVA;AAaA;;;;A","sourceRoot":""}