{"version":3,"file":"static/webpack/static/development/pages/index.js.bd277b159900f16a3364.hot-update.js","sources":["webpack:///./templates/main/components/Icon.jsx","webpack:///./templates/main/components/LineHeader.jsx","webpack:///./templates/main/slides/ImageDescription.jsx","webpack:///./templates/main/slides/ImageDescription2.jsx","webpack:///./templates/main/slides/NumberItems/Item.jsx","webpack:///./templates/main/slides/Services/Item.jsx","webpack:///./templates/main/slides/Services/Services.jsx","webpack:///./templates/main/slides/Services2/Item.jsx","webpack:///./templates/main/slides/Services2/Services2.jsx","webpack:///./templates/main/slides/Title.jsx"],"sourcesContent":["import React from 'react';\nimport { string, oneOfType, number } from 'prop-types';\nimport SVG from 'react-inlinesvg';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nconst getMeasure = num => (typeof num === 'number' ? `${num}px` : num);\n\nconst StyledSVG = styled(SVG)`\n  min-width: ${props => getMeasure(props.width)};\n  min-height: ${props => getMeasure(props.height)};\n\n  svg {\n    fill: ${props => props.fill};\n    width: ${props => getMeasure(props.width)};\n    height: ${props => getMeasure(props.height)};\n  }\n`;\n\nconst Icon = props => {\n  return <StyledSVG {...props} className={classnames('icon', props.className)} />;\n};\n\nIcon.propTypes = {\n  className: string,\n  fill: string,\n  width: oneOfType([string, number]),\n  height: oneOfType([string, number]),\n  src: string.isRequired,\n};\n\nexport default Icon;\n","import styled from 'styled-components';\nimport { node, oneOf } from 'prop-types';\n\nconst Container = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n\n  > h1 {\n    text-align: ${props => props.align};\n  }\n`;\n\nconst Underline = styled.div`\n  width: 80%;\n  height: 8px;\n  margin: 24px 0;\n  background-color: var(--primary);\n  border-radius: 2px;\n`;\n\nconst LineHeader = props => (\n  <Container align={props.align} className=\"line-header\">\n    <h1 className=\"title\">{props.children}</h1>\n    <Underline className=\"underline\" />\n  </Container>\n);\n\nLineHeader.propTypes = {\n  children: node.isRequired,\n  align: oneOf(['left', 'center']),\n};\n\nLineHeader.defaultProps = {\n  align: 'left',\n};\n\nexport default LineHeader;\n","import styled from 'styled-components';\nimport { string } from 'prop-types';\nimport { renderContent } from '../utils';\nimport { LineHeader } from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Left = styled.div`\n  width: 50%;\n  background: url('${props => props.src}') no-repeat center/cover;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 50%;\n  padding: 0 80px 0 64px;\n`;\n\nconst Middle = styled.div`\n  width: 100%;\n`;\n\nconst Content = styled.div`\n  text-align: left;\n`;\n\nconst ImageDescription = props => (\n  <Container className=\"image-description\">\n    <Left src={props.image} className=\"left-column\" />\n    <Right className=\"right-column\">\n      <Middle className=\"middle\">\n        <LineHeader>{props.title}</LineHeader>\n        <Content className=\"content\">{renderContent(props.content)}</Content>\n      </Middle>\n    </Right>\n  </Container>\n);\n\nImageDescription.propTypes = {\n  image: string.isRequired,\n  title: string.isRequired,\n  content: string.isRequired,\n};\n\nexport default ImageDescription;\n","import styled from 'styled-components';\nimport { string } from 'prop-types';\nimport { renderContent } from '../utils';\nimport { BoxHeader } from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 80px;\n`;\n\nconst Middle = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Image = styled.div`\n  width: 864px;\n  height: 648px;\n  min-width: 864px;\n  min-height: 648px;\n  background: url('${props => props.src}') no-repeat center/cover;\n  border-radius: 8px;\n`;\n\nconst Content = styled.div`\n  text-align: left;\n  margin-left: 64px;\n  padding-top: 24px;\n`;\n\nconst ImageDescription2 = props => (\n  <Container className=\"image-description2\">\n    <BoxHeader>{props.title}</BoxHeader>\n    <Middle className=\"middle\">\n      <Image src={props.image} className=\"image\" />\n      <Content className=\"content\">{renderContent(props.content)}</Content>\n    </Middle>\n  </Container>\n);\n\nImageDescription2.propTypes = {\n  image: string.isRequired,\n  title: string.isRequired,\n  content: string.isRequired,\n};\n\nexport default ImageDescription2;\n","import styled from 'styled-components';\nimport { string } from 'prop-types';\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst NumberValue = styled.h2`\n  min-width: 80px;\n`;\n\nconst Right = styled.div`\n  margin-left: 32px;\n  text-align: left;\n`;\n\nconst Title = styled.h4`\n  margin: 0;\n`;\n\nconst Content = styled.div`\n  margin-top: 8px;\n`;\n\nconst Services = props => (\n  <Container className=\"item\">\n    <NumberValue className=\"number\">{props.number}</NumberValue>\n    <Right className=\"right-column\">\n      <Title className=\"title\">{props.title}</Title>\n      <Content className=\"content\">{props.content}</Content>\n    </Right>\n  </Container>\n);\n\nServices.propTypes = {\n  number: string,\n  title: string,\n  content: string,\n};\n\nexport default Services;\n","import styled from 'styled-components';\nimport { string } from 'prop-types';\nimport { Icon } from '../../components';\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Left = styled.div`\n  min-width: 80px;\n`;\n\nconst Right = styled.div`\n  margin-left: 32px;\n  text-align: left;\n`;\n\nconst Title = styled.h4`\n  margin: 0;\n`;\n\nconst Content = styled.div`\n  margin-top: 8px;\n`;\n\nconst Services = props => (\n  <Container className=\"item\">\n    <Left className=\"left-column\">\n      <Icon src={props.icon} width={80} height={80} fill=\"var(--primary)\" />\n    </Left>\n    <Right className=\"right-column\">\n      <Title className=\"title\">{props.title}</Title>\n      <Content className=\"content\">{props.content}</Content>\n    </Right>\n  </Container>\n);\n\nServices.propTypes = {\n  icon: string,\n  title: string,\n  content: string,\n};\n\nexport default Services;\n","import styled from 'styled-components';\nimport { string, arrayOf, exact } from 'prop-types';\nimport { BoxHeading } from '../../components';\nimport Item from './Item';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 80px;\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: min-content;\n  grid-gap: 80px 72px;\n`;\n\nconst Services = props => (\n  <Container className=\"services\">\n    <BoxHeading align=\"center\" title={props.title} content={props.content}>\n      <Items className=\"items\">\n        {props.items.map(item => (\n          <Item key={item.icon} {...item} />\n        ))}\n      </Items>\n    </BoxHeading>\n  </Container>\n);\n\nServices.propTypes = {\n  title: string.isRequired,\n  content: string.isRequired,\n  items: arrayOf(\n    exact({\n      icon: string,\n      title: string,\n      content: string,\n    }),\n  ),\n};\n\nexport default Services;\n","import styled from 'styled-components';\nimport { string } from 'prop-types';\nimport { Icon } from '../../components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  text-align: center;\n`;\nconst Title = styled.h4`\n  margin: 16px 0 8px;\n`;\n\nconst Item = props => (\n  <Container className=\"item\">\n    <Icon src={props.icon} width={80} height={80} fill=\"var(--primary)\" />\n    <Title className=\"title\">{props.title}</Title>\n    <div className=\"content\">{props.content}</div>\n  </Container>\n);\n\nItem.propTypes = {\n  icon: string,\n  title: string,\n  content: string,\n};\n\nexport default Item;\n","import styled from 'styled-components';\nimport { string, arrayOf, exact } from 'prop-types';\nimport { BoxHeading } from '../../components';\nimport Item from './Item';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 80px;\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: min-content;\n  grid-gap: 80px 72px;\n`;\n\nconst Services2 = props => (\n  <Container className=\"services2\">\n    <BoxHeading align=\"center\" title={props.title} content={props.content}>\n      <Items className=\"items\">\n        {props.items.map(item => (\n          <Item key={item.icon} {...item} />\n        ))}\n      </Items>\n    </BoxHeading>\n  </Container>\n);\n\nServices2.propTypes = {\n  title: string.isRequired,\n  content: string.isRequired,\n  items: arrayOf(\n    exact({\n      icon: string,\n      title: string,\n      content: string,\n    }),\n  ),\n};\n\nexport default Services2;\n","import styled from 'styled-components';\nimport { string } from 'prop-types';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Middle = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 80%;\n  margin-top: -80px;\n`;\n\nconst Image = styled.img`\n  max-width: 600px;\n  max-height: 480px;\n  margin-bottom: 32px;\n`;\n\nconst Header = styled.h1`\n  text-align: center;\n`;\n\nconst SubHeader = styled.h3`\n  margin-top: 24px;\n  text-align: center;\n`;\n\nconst Title = props => (\n  <Container className=\"title\">\n    <Middle className=\"middle\">\n      {props.image && <Image src={props.image} className=\"image\" />}\n      <Header className=\"title\">{props.title}</Header>\n      <SubHeader className=\"subtitle\">{props.subtitle}</SubHeader>\n    </Middle>\n  </Container>\n);\n\nTitle.propTypes = {\n  image: string,\n  title: string.isRequired,\n  subtitle: string,\n};\n\nexport default Title;\n"],"mappings":"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","sourceRoot":""}